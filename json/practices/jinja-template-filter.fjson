{"parents": [{"link": "../", "title": "Practices"}], "prev": {"link": "../peer-code-reviews/", "title": "How we use and conduct pull requests and peer code reviews"}, "next": {"link": "../../experiments/", "title": "Experiments"}, "title": "Jinja Template Filter", "meta": {}, "body": "<div class=\"section\" id=\"jinja-template-filter\">\n<h1>Jinja Template Filter<a class=\"headerlink\" href=\"#jinja-template-filter\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Mit <a class=\"reference external\" href=\"https://jinja.palletsprojects.com/en/2.11.x/templates/#filters\">Template Filtern</a> ist es uns m\u00f6glich Python Code auszuf\u00fchren und das Ergebnis im Template auszugeben.</p>\n<p>Diese Template Filter definieren wir in der Datei <code class=\"docutils literal notranslate\"><span class=\"pre\">zeit/web/core/template.py</span></code></p>\n<div class=\"section\" id=\"wie-definiere-ich-einen-neuen-template-filter\">\n<h2>Wie definiere ich einen neuen Template Filter?<a class=\"headerlink\" href=\"#wie-definiere-ich-einen-neuen-template-filter\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Ein Template Filter wird durch das Anlegen einer neuen Funktion in der Datei <code class=\"docutils literal notranslate\"><span class=\"pre\">zeit/web/core/template.py</span></code> definiert.\nDiese ben\u00f6tigt den <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;zeit.web.register_filter</span></code> Decorator.</p>\n<p>Hier ein Beispiel:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@zeit.web.register_filter</span>\n<span class=\"k\">def</span> <span class=\"nf\">multiply_by_two</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">):</span>\n  <span class=\"k\">return</span> <span class=\"n\">number</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"wie-kann-ich-meinen-template-filter-testen\">\n<h2>Wie kann ich meinen Template Filter testen?<a class=\"headerlink\" href=\"#wie-kann-ich-meinen-template-filter-testen\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Es ist gew\u00fcnscht, dass jeder selbstgeschriebene Template Filter ebenfalls durch Tests \u00fcberpr\u00fcft wird.\nDie Tests f\u00fcr unsere Template Filter befinden sich in <code class=\"docutils literal notranslate\"><span class=\"pre\">zeit/web/core/test/test_template.py</span></code>.</p>\n<p>Hier ein Beispiel:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">test_filter_multiply_by_two_should_not_throw_exception</span><span class=\"p\">(</span><span class=\"n\">application</span><span class=\"p\">):</span>\n  <span class=\"k\">assert</span> <span class=\"n\">zeit</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">multiply_by_two</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">4</span>\n  <span class=\"k\">assert</span> <span class=\"n\">zeit</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">multiply_by_two</span><span class=\"p\">(</span><span class=\"s1\">&#39;foo) == &#39;</span><span class=\"n\">foofoo</span><span class=\"s1\">&#39;</span>\n  <span class=\"k\">assert</span> <span class=\"n\">zeit</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">multiply_by_two</span><span class=\"p\">(</span><span class=\"mf\">1.5</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"wie-verwende-ich-meinen-template-filter\">\n<h2>Wie verwende ich meinen Template Filter?<a class=\"headerlink\" href=\"#wie-verwende-ich-meinen-template-filter\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Der neu geschriebene Template Filter l\u00e4sst sich nun im Template verwenden</p>\n<p>Beispiel:</p>\n<div class=\"highlight-html notranslate\"><div class=\"highlight\"><pre><span></span>{{ 2 | multiply_by_two }}\n</pre></div>\n</div>\n<p>sollte als Ausgabe</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"mi\">4</span>\n</pre></div>\n</div>\n<p>erzeugen.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["experiments/index", "Experiments", "N", "next"], ["practices/peer-code-reviews", "How we use and conduct pull requests and peer code reviews", "P", "previous"]], "sourcename": "practices/jinja-template-filter.md.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Jinja Template Filter</a><ul>\n<li><a class=\"reference internal\" href=\"#wie-definiere-ich-einen-neuen-template-filter\">Wie definiere ich einen neuen Template Filter?</a></li>\n<li><a class=\"reference internal\" href=\"#wie-kann-ich-meinen-template-filter-testen\">Wie kann ich meinen Template Filter testen?</a></li>\n<li><a class=\"reference internal\" href=\"#wie-verwende-ich-meinen-template-filter\">Wie verwende ich meinen Template Filter?</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".md", "current_page_name": "practices/jinja-template-filter", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}