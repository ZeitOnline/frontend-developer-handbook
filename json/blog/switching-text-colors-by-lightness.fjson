{"parents": [{"link": "../", "title": "ZEIT ONLINE Developer Blog"}], "prev": {"link": "../jinja-avoid-empty-containers/", "title": "Small Wins: Avoid empty containers in Jinja"}, "next": {"link": "../document-outline/", "title": "Small Wins: Improving our Document Outline"}, "title": "Switching text colors in subject to its background color lightness", "meta": {}, "body": "<div class=\"section\" id=\"switching-text-colors-in-subject-to-its-background-color-lightness\">\n<h1>Switching text colors in subject to its background color lightness<a class=\"headerlink\" href=\"#switching-text-colors-in-subject-to-its-background-color-lightness\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Sometimes you build a feature with the feeling, there is something that can go wrong afterwards. In this case we built a CMS feature where the editor could decide more or less about the background color of a part of the website. This poses in our thinking a threat to the accessibility of the foreground text, falling behind in contrast in the best case, being completely unreadable in the worst case. No user would certainly choose a black background with black text on it, but what about some of the so loved shades of gray? So\u2026 we looked for a solution to change text colors automatically.</p>\n<p>What we found was <a class=\"reference external\" href=\"https://css-tricks.com/switch-font-color-for-different-backgrounds-with-css/\">Switch font color for different backgrounds with CSS</a> over at CSS-Tricks, which uses css variables (and a css math coding trick from hell to achieve conditional statements) to change text colors in subject to its background. But the article also led to the <a class=\"reference external\" href=\"https://www.w3.org/TR/AERT/#color-contrast\">Techniques For Accessibility Evaluation And Repair Tools Working Draft</a> of the W3C, which includes an equation to estimate <em>perceived lightness</em> of colors.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">red</span> <span class=\"o\">*</span> <span class=\"mf\">0.299</span> <span class=\"o\">+</span> <span class=\"n\">green</span> <span class=\"o\">*</span> <span class=\"mf\">0.587</span> <span class=\"o\">+</span> <span class=\"n\">blue</span> <span class=\"o\">*</span> <span class=\"mf\">0.114</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">255</span>\n</pre></div>\n</div>\n<p>If you put the red, green and blue parts of a color value into the equation you will get a value between 0 and 1, where 0 is perceived as an absolute dark color (black). I would not question the math behind this. All what\u2019s left to do is to set a threshold value, from which one we think of a color as so dark, that we need to change the foreground color.</p>\n<p>This can be certainly achieved with css variables (and the conditional css trick mentioned before) but as we have a broad variety of browsers we need to support that certainly not <a class=\"reference external\" href=\"https://caniuse.com/#feat=css-variables\">support</a> css custom properties yet, we decided to put the equation into a template function of our pythonic template engine <a class=\"reference external\" href=\"http://jinja.pocoo.org/\">jinja2</a>.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">colorsys</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">color_is_dark</span><span class=\"p\">(</span><span class=\"n\">hexcolor</span><span class=\"p\">):</span>\n    <span class=\"c1\"># takes a hex background color (no shorthands) and computes</span>\n    <span class=\"c1\"># if the color is dark in accessiblity context</span>\n    <span class=\"c1\"># i.e. a light color needs to be used for contrast</span>\n    <span class=\"c1\"># like in light font on dark background</span>\n    <span class=\"n\">threshold</span> <span class=\"o\">=</span> <span class=\"mf\">0.6</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">red</span><span class=\"p\">,</span> <span class=\"n\">green</span><span class=\"p\">,</span> <span class=\"n\">blue</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">hexcolor</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">:</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n        <span class=\"c1\"># percieved lightness by W3C working draft</span>\n        <span class=\"c1\"># https://www.w3.org/TR/AERT/#color-contrast</span>\n        <span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">red</span> <span class=\"o\">*</span> <span class=\"mf\">0.299</span> <span class=\"o\">+</span> <span class=\"n\">green</span> <span class=\"o\">*</span> <span class=\"mf\">0.587</span> <span class=\"o\">+</span> <span class=\"n\">blue</span> <span class=\"o\">*</span> <span class=\"mf\">0.114</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">255</span>\n        <span class=\"k\">return</span> <span class=\"n\">l</span> <span class=\"o\">&lt;</span> <span class=\"n\">threshold</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n</pre></div>\n</div>\n<p>If the color is defined as dark (lower than 0.6) we add a modifier class to the teaser to change colors of the content:</p>\n<div class=\"highlight-jinja notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">teaser_modifier</span> -<span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"x\">    </span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">teaser.serie.color</span> -<span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"x\">        </span><span class=\"cp\">{{</span> <span class=\"s1\">&#39;teaser--light-text&#39;</span> <span class=\"k\">if</span> <span class=\"nv\">teaser.serie.color</span> <span class=\"o\">|</span> <span class=\"nf\">color_is_dark</span> <span class=\"cp\">}}</span><span class=\"x\"></span>\n<span class=\"x\">    </span><span class=\"cp\">{%</span>- <span class=\"k\">endif</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n<span class=\"cp\">{%</span>- <span class=\"k\">endblock</span> <span class=\"cp\">%}</span><span class=\"x\"></span>\n</pre></div>\n</div>\n<p>In the CSS we change now text colors based on the background color, from dark gray on light backgrounds to white on dark backgrounds. For testing purposes we put two versions of the feature on a test page one with light and one with dark background and do a11y tests on them with <a class=\"reference external\" href=\"https://github.com/mozilla-services/axe-selenium-python\">axe</a> and <a class=\"reference external\" href=\"https://selenium-python.readthedocs.io/\">Selenium</a> (we use <a class=\"reference external\" href=\"https://docs.pytest.org/en/latest/\">pytest</a> for these things).</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">axe_selenium_python</span> <span class=\"kn\">import</span> <span class=\"n\">Axe</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_podcast_leader_dark_is_accessable</span><span class=\"p\">(</span><span class=\"n\">selenium_driver</span><span class=\"p\">):</span>\n    <span class=\"n\">driver</span> <span class=\"o\">=</span> <span class=\"n\">selenium_driver</span>\n    <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;/zeit-online/index-with-podcast-lead-variations&#39;</span><span class=\"p\">)</span>\n    <span class=\"n\">axe</span> <span class=\"o\">=</span> <span class=\"n\">Axe</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">)</span>\n    <span class=\"n\">axe</span><span class=\"o\">.</span><span class=\"n\">inject</span><span class=\"p\">()</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">axe</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">&#39;.teaser-podcast-leader&#39;</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"s1\">&#39;runOnly&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;wcag2a&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wcag2aa&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wcag2aaa&#39;</span><span class=\"p\">],</span>\n        <span class=\"s1\">&#39;resultTypes&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;violations&#39;</span><span class=\"p\">],</span>\n        <span class=\"s1\">&#39;rules&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;color-contrast&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;enabled&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;true&#39;</span><span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">})</span>\n\n    <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;violations&#39;</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n</pre></div>\n</div>\n<p>Based on the CSS-Tricks method there is <a class=\"reference external\" href=\"https://codepen.io/codecandies/pen/QYQLZb/\">a codepen</a> to demonstrate the outcome.</p>\n<div class=\"section\" id=\"resources\">\n<h2>Resources<a class=\"headerlink\" href=\"#resources\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"articles\">\n<h3>Articles<a class=\"headerlink\" href=\"#articles\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"https://css-tricks.com/switch-font-color-for-different-backgrounds-with-css/\">Switch font color for different backgrounds with CSS</a></p></li>\n</ul>\n</div>\n<div class=\"section\" id=\"webstandards\">\n<h3>Webstandards<a class=\"headerlink\" href=\"#webstandards\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"https://www.w3.org/TR/AERT/#color-contrast\">Techniques For Accessibility Evaluation And Repair Tools Working Draft</a></p></li>\n</ul>\n</div>\n<div class=\"section\" id=\"tools\">\n<h3>Tools<a class=\"headerlink\" href=\"#tools\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"https://github.com/mozilla-services/axe-selenium-python\">axe-selenium-python</a></p></li>\n<li><p><a class=\"reference external\" href=\"https://docs.pytest.org/en/latest/\">pytest</a></p></li>\n</ul>\n<p><em>Written 2019-03-07, Nico Br\u00fcnjes</em></p>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["blog/document-outline", "Small Wins: Improving our Document Outline", "N", "next"], ["blog/jinja-avoid-empty-containers", "Small Wins: Avoid empty containers in Jinja", "P", "previous"]], "sourcename": "blog/switching-text-colors-by-lightness.md.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Switching text colors in subject to its background color lightness</a><ul>\n<li><a class=\"reference internal\" href=\"#resources\">Resources</a><ul>\n<li><a class=\"reference internal\" href=\"#articles\">Articles</a></li>\n<li><a class=\"reference internal\" href=\"#webstandards\">Webstandards</a></li>\n<li><a class=\"reference internal\" href=\"#tools\">Tools</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".md", "current_page_name": "blog/switching-text-colors-by-lightness", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}